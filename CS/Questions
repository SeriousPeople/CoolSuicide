1. Restful이란 무엇인가
  - Restful의 특징
2. https의 동작 원리
3. 3way, 4way handshake 의 차이점
4. 좋은 hash function이란?
5. Java에서 해시 테이블이 어떻게 구현되어 있는지
6. Java 최신 버전, 특징
7. Java GC란 무엇인가
8. 메모리 리크 발생시
9. 세마포어란 무엇인가
10. Semaphore, Spinlock 차이점
11. 퀵소트, 머지소트의 차이점
12. 트랜잭션 격리레벨 설명
13. Undo, Redo 로그 정의와 차이점
14. 인덱스의 구조가 B+ Tree인 이유
15. mysql 실행계획에 대해 설명하시오
16. Join의 종류
17. Sync, Async와 Blocking I/O, Non-Blocking I/O 차이점



레스트풀 -> http method랑 시스템상의 자원을 url로표현해서 하는거다. 직관적인 api인터페이스하게 만든다 url설명 (게시판으로 얘기 )
사실 레스트풀을 꼭지킬필요없다 처음등장 2001 지금의 웹 더복잡 슬랙에 챗봇 레스트 api -> 액션에 대한걸 url에 표현시켜버린다  지금은 이제 다포함시켜버리는게 좋은것같기도하고 적절히 섞는게좋다.

https : 


레이어4 설명중: 있어보이는 답변: UDP, TCP 의결정적인 차이는 유디피는 트랜스포트를 직접구현하고싶을때 유디피를 쓰면된다. 어플리케이션레이어에서 구현하고싶으면 유디피
HTTP3에서는 퀵 있다 
 
쓰리웨이 포웨이(플래그 단위로)

네이버 쳤을때:

인터넷 연결 부터가 필요할까?
-> 어느정도 레이어단 정도 


계층 별로 설명 필요할 듯


해시 테이블:
해시 펑션 이야기 부터 말하기
해시 펑션의 좋은 조건: 두가지
-> 잘 퍼트리는 해쉬펑션, 컴퓨팅코스트가낮은것
자바에서 해시 테이블 구현 어케 됐는지
-> 체이닝은 똑같은데 7이전에는 링크드리스트, 8 RB트리로 바꼇다
-> 버켓사이즈가 결국에는 늘어나야한다 결국에는 파이썬은 75퍼센트가 되면 버켓을 두배로 늘린다. 리어레인지

자바 버전, 최신 버전 추가된거
자바 가비지 컬렉터 -> 자바버전
메모지 리크 발생(써큘러 레퍼런스)


세마포어 질문 ->
스핀락 비지웨잇, 세마포어 큐에다가 -> 스핀락의 발전버전 세마포어 세마포어는 큐를 사용/ 큐에서 대기하고있는애들 깨움 그래서 스타베이션 발생할 수 있음
-> 은행마냥 번호표뽑는것도 존재하는데 흠.. 말해도좋고

어토믹 펑션()
스핀락과 세마포어 차이
데드락 방지법
-> 예방, 회피, 발생 회복 예시 봐보시길..


퀵소트 머지소트

트랜잭션 격리레벨


인덱스 비플트리 이유
-> 어레인지연산, 등호연산때문 물론 해시펑션 빅오의 일
실행계획
조인 종류
언두 리두

블락킹 넌블락킹 -> 함수의 반환
동기 비동기 
